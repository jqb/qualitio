* qualitio.core.custommodel *
  custommodel  is django  application that  gives base  foundation for
  model  customizations. By  model customization  I mean  easy  way of
  extending  execute, store,  require  models fields  and adding  your
  custom validation.

** How customization works **
  Each  customization model defines  it's target  (the model  which it
  will extend). Here's how it works:

  ##########################################################
  from django.db import models

  from qualitio.core.custommodel.models import ModelCustomization
  from qualitio.require.models import Requirement

  class RequirementCustomization(ModelCustomization):
	mark = models.IntegerField(null=True, blank=True, choices=(
		(1, "Good"),
		(2, "Better"),
		(3, "The best"),
		))

	class Meta:
	    model = Requirement
  ##########################################################

  You're simply telling django which  model is the target to customize
  and    you're   defining    fields   on    your   ModelCustomization
  model.  ModelCustomization will  simply have  OneToOneField  to your
  ``model''.

  ATENTION! Do  not ever, ever create  ModelCustomization instances by
  your self. It is created (or saved) on every CustomizableModel save.


** How add ModelCustomization **
  Assuming    you've   just    addded    RequirementCustomization   in
  customizations.models module.  Now  type schemamigration & migration
  commands:

  $ ./manage.py schemamigration --add-model=RequirementCustomization customizations
  $ ./manage.py migrate

  Every time you add NEW MODEL run those commands for each of them.

  If you already  have customizations.models.YourModel defined and you
  want to add new or  remove existing field, simply add/remove one and
  type commands:

  $ ./manage.py schemamigration customizations --auto
  $ ./manage.py migrate


** API **
  Once you define your ModelCustomization subclass you four detail and
  forms  views  will  dynamically  extend.  What's more  you  can  use
  following API:

  >>> from require.models import Requirement
  >>> req = Requirement.objects.get(id=1)
  >>> req.customization    # direct path to customization object
  >>>
  >>>
  >>> req.custom_fields()  # returns dict with req.customization
  >>>                      # object values
